# This is an autogenerated function, ported from the original legacy version.
# It /should work/ as is, but will not have all the benefits of the modern
# function API. You should see the function docs to learn how to add function
# signatures for type safety and to document this function using puppet-strings.
#
# https://puppet.com/docs/puppet/latest/custom_functions_ruby.html
#
# ---- original file header ----
require 'json'
require 'net/http'

# ---- original file header ----
#
# @summary
#   Summarise what the function does here
#
Puppet::Functions.create_function(:'gitartifact::getSource') do
  # @param args
  #   The original array of arguments. Port this to individually managed params
  #   to get the full benefit of the modern function API.
  #
  # @return [Data type]
  #   Describe what the function returns here
  #
  dispatch :default_impl do
    # Call the method named 'default_impl' when this is matched
    # Port this to match individual params for better type safety
    repeated_param 'Any', :args
  end


  def default_impl(*args)
    
    account = args[0]
    repository = args[1]
    releasetag = args[2]
    pattern = args[3]
    oauth = args[4]

    uri = URI.parse("https://api.github.com/repos/#{account}/#{repository}/releases?access_token=#{oauth}")
    #args = {include_entities: 0, include_rts: 0, screen_name: 'johndoe', count: 2, trim_user: 1}
    #uri.query = URI.encode_www_form(args)
    http = Net::HTTP.new(uri.host, uri.port)
    http.use_ssl = true
    request = Net::HTTP::Get.new(uri.request_uri)
    response = http.request(request)
    data = response.body
    result = JSON.parse(data)
    test = ""
    result.each do |myrelease|
      if (myrelease["tag_name"] == releasetag)
        myrelease["assets"].each do |asset|
          if (asset["name"].include? pattern)
            test = asset["url"]
          end
        end
      end
    end

    notice(test)
    test
  
  end
end
